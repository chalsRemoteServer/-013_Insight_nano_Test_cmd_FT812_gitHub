#ifndef IMAGENES_TEST_H
#define IMAGENES_TEST_H
#include <stdint.h>


#define MEM_PIC_BASE 0x00000  // Dirección base para imágenes

// Tamaños de cada imagen en bytes (ancho * alto * 2 bytes para RGB565)
//// Para imagen 32x32 en L8 (8-bit grayscale)
#define SIZE_PIC1 (32 * 32 )    //  bytes aprox.
#define SIZE_PIC2 (8 * 8)    // 
//#define SIZE_PIC3 (128 * 64 * 2)     // 16384 bytes

// Direcciones de imágenes consecutivas
#define MEM_PIC1 (MEM_PIC_BASE)
#define MEM_PIC2 MEM_PIC_BASE//MEM_PIC1 + SIZE_PIC1)
//#define MEM_PIC3 (MEM_PIC2 + SIZE_PIC2)

const uint8_t TestImage8x8[64] PROGMEM = {
  // Alterna 0x00 (negro) y 0xFF (blanco) cada píxel
  0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,
  0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,
  0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,
  0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,
  0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,
  0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,
  0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,
  0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF
};



// Imagen de logo (ejemplo generado con EVE Asset Builder en formato RGB565)
const uint8_t MyLogo[1024] PROGMEM ={
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe5, 0x9e,
0x9e, 0xe5, 0xff, 0xff, 0xff, 0xff, 0xd4, 0x9b, 0x9b, 0x9b, 0x9c, 0xe7, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xcd, 0x2a, 0x0, 0x0, 0x2a, 0xce, 0xff, 0xff, 0xff, 0xa0, 0x0, 0x0, 0x0,
0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xfe, 0xb2, 0xd, 0x0, 0x0, 0x0, 0x0, 0xd, 0xb3, 0xfe, 0xff,
0xa0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x93, 0x0, 0x0, 0x0, 0x4b, 0x4b, 0x0,
0x0, 0x0, 0x94, 0xf9, 0xa0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0x72, 0x0, 0x0, 0x0,
0x6d, 0xee, 0xee, 0x6d, 0x0, 0x0, 0x0, 0x75, 0x87, 0x0, 0x0, 0x0, 0x0, 0xc7,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe2, 0x4f,
0x0, 0x0, 0x0, 0x8e, 0xf8, 0xe6, 0xe6, 0xf8, 0x8e, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xcd, 0x2a, 0x0, 0x0, 0x0, 0xad, 0xfd, 0xd2, 0x35, 0x35, 0xd2, 0xfd, 0xad,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xfe, 0xb2, 0xd, 0x0, 0x0, 0x26, 0xca, 0xfe, 0xb6, 0xd, 0x0,
0x0, 0xd, 0xb6, 0xfe, 0xca, 0x26, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x93, 0x0, 0x0, 0x0, 0x4b, 0xdf, 0xf9,
0x96, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x96, 0xf9, 0xdf, 0x4b, 0x0, 0x0, 0x0,
0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0x72, 0x0, 0x0, 0x0,
0x6d, 0xee, 0xf0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0xef,
0xee, 0x6d, 0x0, 0x0, 0x0, 0x72, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x4f,
0x0, 0x0, 0x0, 0x8d, 0xf8, 0xe0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x4f, 0xe0, 0xf8, 0x8e, 0x0, 0x0, 0x0, 0x51, 0xe2, 0xff, 0xff,
0xff, 0xcd, 0x2a, 0x0, 0x0, 0x0, 0xad, 0xfd, 0xca, 0x26, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x26, 0xca, 0xfd, 0xad, 0x0, 0x0,
0x0, 0x2a, 0xcd, 0xff, 0xb4, 0xd, 0x0, 0x0, 0x26, 0xc9, 0xfd, 0xad, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0xad, 0xfd, 0xc9, 0x26, 0x0, 0x0, 0xd, 0xb4, 0x71, 0x0, 0x0, 0x49, 0xde, 0xf7,
0x8b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x8b, 0xf7, 0xde, 0x49, 0x0, 0x0, 0x71, 0xee, 0x4b,
0x6c, 0xee, 0xee, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0xee, 0xee, 0x6d,
0x4b, 0xee, 0xff, 0xf1, 0xf9, 0xff, 0xc7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0xc7, 0xff, 0xf9, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xc7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xc7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb9,
0xf2, 0xf2, 0xf2, 0xf2, 0xb9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0xc2, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xc7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0xff, 0xff,
0xff, 0xff, 0xc3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0xc2, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x0, 0x0, 0x0,
0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xca, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0xff, 0xff, 0xff, 0xff,
0xc3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xca, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf7, 0xa1, 0x8e, 0x8e, 0x8e, 0x8e, 0x8e, 0x8e, 0x8e, 0xd5,
0xff, 0xff, 0xff, 0xff, 0xd5, 0x8e, 0x8e, 0x8e, 0x8e, 0x8e, 0x8e, 0x8e, 0xa1, 0xf7,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff
};


  
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/
/** Fin My Logo Imagen******************************************************/

// extern const uint16_t Img2[];
// extern const uint16_t Img3[];



#endif